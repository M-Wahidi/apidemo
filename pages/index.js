import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useState, useRef, useEffect } from "react";
import axios from "axios";
export default function Home() {
  const formRef = useRef();
  const updatedText = useRef();

  const [incomingData, setIncoimgData] = useState([]);
  const [isUpdate, setIsUpdate] = useState(false);

  const [data, setData] = useState({
    email: "",
    name: "",
    text: "",
  });

  const onChange = (e) => {
    setData({ ...data, [e.target.name]: e.target.value });
  };

  const getData = async () => {
    const response = await axios.get("/api/user");
    const data = response.data;
    setIncoimgData(data);
  };

  const handleSubmitForm = async (e) => {
    e.preventDefault();
    const response = await axios.post("/api/user", data);
    console.log(response.data);
    setData({
      email: "",
      name: "",
      text: "",
    });
    formRef.current.reset();
    await getData();
  };

  const deleteUser = async (id) => {
    const respones = await axios.delete("/api/user/" + id);
    const deletedUser = await respones.data;
    console.log(deletedUser);
    getData();
  };

  const updateUser = async (id) => {
    const newText = updatedText.current.value;
    await axios.patch("/api/user/" + id, { newText });
    updatedText.current.value = "";
    setIsUpdate((prev) => !prev);
    getData();
  };

  useEffect(() => {
    getData();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <form ref={formRef} onSubmit={handleSubmitForm}>
          <input
            type="email"
            placeholder="email"
            name="email"
            onChange={(e) => onChange(e)}
          />
          <input
            type="text"
            placeholder="name"
            name="name"
            onChange={(e) => onChange(e)}
          />
          <input
            type="text"
            placeholder="text"
            name="text"
            onChange={(e) => onChange(e)}
          />
          <button type="submit">Send Data</button>
        </form>
        {incomingData &&
          incomingData.map((elem) => {
            return (
              <div key={elem.id} styles={{ display: "flex" }}>
                <h3>{elem.name}</h3>
                <h3>{elem.email}</h3>
                <p>{elem.text}</p>
                <button onClick={() => deleteUser(elem.id)}>Delete</button>

                {!isUpdate && (
                  <button onClick={() => setIsUpdate((prev) => !prev)}>
                    Update
                  </button>
                )}
                {isUpdate && (
                  <>
                    <input ref={updatedText} type="text" />{" "}
                    <button onClick={() => updateUser(elem.id)}>
                      Confirm Upate
                    </button>
                  </>
                )}
              </div>
            );
          })}
      </main>
    </div>
  );
}
